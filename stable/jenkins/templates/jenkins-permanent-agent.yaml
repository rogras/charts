apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "jenkins.fullname" . }}-permanentagent
  labels:
    "app.kubernetes.io/name": '{{ template "jenkins.name" .}}'
    "helm.sh/chart": "{{ .Chart.Name }}-{{ .Chart.Version }}"
    "app.kubernetes.io/managed-by": "{{ .Release.Service }}"
    "app.kubernetes.io/instance": "{{ .Release.Name }}"
    "app.kubernetes.io/component": "{{ .Values.permanentagent.componentName }}"
spec:
  replicas: {{ .Values.permanentagent.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      "app.kubernetes.io/component": "{{ .Values.permanentagent.componentName }}"
      "app.kubernetes.io/instance": "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        "app.kubernetes.io/name": '{{ template "jenkins.name" .}}'
        "helm.sh/chart": "{{ .Chart.Name }}-{{ .Chart.Version }}"
        "app.kubernetes.io/managed-by": "{{ .Release.Service }}"
        "app.kubernetes.io/component": "{{ .Values.permanentagent.componentName }}"
        "app.kubernetes.io/instance": "{{ .Release.Name }}"
        {{- range $key, $val := .Values.permanentagent.podLabels }}
        {{ $key }}: {{ $val | quote }}
        {{- end}}
    spec:
      containers:
        - name: {{ template "jenkins.fullname" . }}-permanentagent
          image: "{{ .Values.agent.image }}:{{ .Values.agent.imageTag }}"
          {{- if .Values.agent.alwaysPullImage }}
          imagePullPolicy: "Always"
          {{- end }}
          command: ["sh"]
          args: ["/opt/init/init_slave.sh"]
          env:
            - name: JAVA_OPTS
              value: {{ default "" .Values.permanentagent.javaOpts | quote }}
            - name: PERMANENT_AGENT
              value: "true"
            {{- if .Values.agent.envVars }}
{{ toYaml .Values.agent.envVars | indent 12 }}
            {{- end }}
          {{- if .Values.permanentagent.sspmutualtls.enabled }}
            - name: SSL_DIR
              value: {{ .Values.permanentagent.sspmutualtls.ssldir }}
          {{- end }}
            {{- if .Values.proxy.enabled }}
            - name: http_proxy
              value: {{ .Values.proxy.server }}:{{ default "80" .Values.proxy.port }}
            - name: https_proxy
              value: {{ .Values.proxy.server }}:{{ default "443" .Values.proxy.port }}
            {{- end }}
            {{- if .Values.buildImages.format }}
            - name: BUILDAH_FORMAT
              value: {{ default "docker" .Values.buildImages.format | quote }}
            {{- end }}
          {{- if or (.Values.agent.privileged) (.Values.buildImages.enabled) }}
          securityContext:
            privileged: true
          {{- end }}
          {{- if and (.Values.agent.runAsUser) (not .Values.buildImages.enabled) }}
          securityContext:
            runAsUser: {{ .Values.agent.runAsUser }}
          {{- end }}
          volumeMounts:
          {{- if .Values.buildImages.enabled }}
            - mountPath: "/var/lib/containers"
              name: images
          {{- end }}
            - mountPath: "/opt/init"
              name: jenkins-init
          {{- if .Values.permanentagent.sspmutualtls.enabled }}
            - mountPath: "{{ .Values.permanentagent.sspmutualtls.ssldir }}/tmp"
              name: sspmutualtls
          {{- end }}
          resources:
{{ toYaml .Values.permanentagent.resources | indent 12 }}
      volumes:
      {{- if .Values.buildImages.enabled }}
        - name: images
          emptyDir: {}
      {{- end }}
      {{- if .Values.permanentagent.sspmutualtls.enabled }}
        - name: sspmutualtls
          secret: 
            secretName: {{ template "jenkins.fullname" . }}-permanentagent-sspmutualtls-secret
      {{- end }}
        - name: jenkins-init
          secret: 
            secretName: {{ template "jenkins.fullname" . }}-permanentagent-init-secret